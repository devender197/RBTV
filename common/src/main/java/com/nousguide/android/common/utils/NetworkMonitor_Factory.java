// Generated by Dagger (https://dagger.dev).
package com.nousguide.android.common.utils;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkMonitor_Factory implements Factory<NetworkMonitor> {
  private final Provider<Context> appContextProvider;

  public NetworkMonitor_Factory(Provider<Context> appContextProvider) {
    this.appContextProvider = appContextProvider;
  }

  @Override
  public NetworkMonitor get() {
    return newInstance(appContextProvider.get());
  }

  public static NetworkMonitor_Factory create(Provider<Context> appContextProvider) {
    return new NetworkMonitor_Factory(appContextProvider);
  }

  public static NetworkMonitor newInstance(Context appContext) {
    return new NetworkMonitor(appContext);
  }
}
