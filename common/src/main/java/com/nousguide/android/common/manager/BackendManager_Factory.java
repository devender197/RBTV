// Generated by Dagger (https://dagger.dev).
package com.nousguide.android.common.manager;

import com.nousguide.android.common.base.BaseApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BackendManager_Factory implements Factory<BackendManager> {
  private final Provider<BaseApi> apiProvider;

  private final Provider<CacheManager> cacheManagerProvider;

  public BackendManager_Factory(Provider<BaseApi> apiProvider,
      Provider<CacheManager> cacheManagerProvider) {
    this.apiProvider = apiProvider;
    this.cacheManagerProvider = cacheManagerProvider;
  }

  @Override
  public BackendManager get() {
    return newInstance(apiProvider.get(), cacheManagerProvider.get());
  }

  public static BackendManager_Factory create(Provider<BaseApi> apiProvider,
      Provider<CacheManager> cacheManagerProvider) {
    return new BackendManager_Factory(apiProvider, cacheManagerProvider);
  }

  public static BackendManager newInstance(BaseApi api, CacheManager cacheManager) {
    return new BackendManager(api, cacheManager);
  }
}
